const db = require('../config/db');
const { crawlVoerBook } = require('../services/voerService_new');

async function updateMissingTitles() {
  const sql = `
    SELECT id, link FROM books 
    WHERE (title IS NULL OR title = '' OR title = 'Kh√¥ng ti√™u ƒë·ªÅ')
    AND link LIKE '%voer.edu.vn%'
  `;

  db.query(sql, async (err, books) => {
    if (err) {
      console.error('‚ùå L·ªói truy v·∫•n DB:', err.message);
      return;
    }

    console.log(`üîç ƒêang ki·ªÉm tra ${books.length} s√°ch c·∫ßn c·∫≠p nh·∫≠t ti√™u ƒë·ªÅ...`);

    for (const book of books) {
      try {
        const { title } = await crawlVoerBook(book.link);

        if (title && title.trim() !== '' && title !== 'Kh√¥ng ti√™u ƒë·ªÅ') {
          db.query(`UPDATE books SET title = ? WHERE id = ?`, [title.trim(), book.id], (err) => {
            if (err) {
              console.error(`‚ùå L·ªói c·∫≠p nh·∫≠t ID ${book.id}:`, err.message);
            } else {
              console.log(`‚úÖ ƒê√£ c·∫≠p nh·∫≠t title cho ID ${book.id}: ${title}`);
            }
          });
        } else {
          console.log(`‚ö†Ô∏è Kh√¥ng t√¨m ƒë∆∞·ª£c ti√™u ƒë·ªÅ h·ª£p l·ªá cho ID ${book.id}`);
        }
      } catch (err) {
        console.error(`‚ö†Ô∏è L·ªói crawl s√°ch ID ${book.id}:`, err.message);
      }
    }
  });
}

updateMissingTitles();
